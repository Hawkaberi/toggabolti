name: Run and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Runs at midnight UTC every night

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Miniconda
        shell: bash
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a

      - name: Create conda environment
        shell: bash
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda env create -f toggaenv.yml
          conda activate toggaenv

      - name: Verify conda environment
        shell: bash
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda activate toggaenv
          conda env list
          conda info

      - name: Run generate_website_objects.py
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GITHUB_ACTIONS: true
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda activate toggaenv
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > /tmp/google-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-credentials.json
          python generate_website_objects.py

  deploy-website:
    runs-on: ubuntu-latest
    needs: run-script
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Miniconda
        shell: bash
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a

      - name: Create conda environment
        shell: bash
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda env create -f toggaenv.yml
          conda activate toggaenv

      - name: Verify conda environment
        shell: bash
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda activate toggaenv
          conda env list
          conda info

      - name: Build and Deploy
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GITHUB_ACTIONS: true
        run: |
          source "$HOME/miniconda/etc/profile.d/conda.sh"
          conda activate toggaenv
          mkdir -p public
          rsync -av --progress --exclude public * public/

          # Uncomment and adjust the following lines for other types of projects

          # Example for Jekyll
          # bundle install
          # bundle exec jekyll build -d public

          # Example for Hugo
          # hugo -d public

          # Example for React/Vue.js
          # npm install
          # npm run build
          # cp -r build/* public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public # Adjust to your build output directory
